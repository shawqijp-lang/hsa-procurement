// ูุญุต ุญุงูุฉ localStorage ุงูุญุงููุฉ
console.log('๐ ูุญุต ุญุงูุฉ localStorage:');
console.log('=====================================');

// ูุญุต ุงูููุงุชูุญ ุงูููุฌูุฏุฉ
const keys = Object.keys(localStorage);
console.log(`๐ ุนุฏุฏ ุงูููุงุชูุญ: ${keys.length}`);

// ูุญุต ุงูููุงุชูุญ ุงููููุฉ
const importantKeys = [
  'token', 'auth_token',
  'user', 'user_data',
  'hsa_final_unified_storage',
  'offlineData',
  'cached_templates',
  'dashboard-settings-updated'
];

console.log('\n๐ ุงูููุงุชูุญ ุงููููุฉ:');
importantKeys.forEach(key => {
  const exists = localStorage.getItem(key) !== null;
  const size = exists ? localStorage.getItem(key).length : 0;
  console.log(`${exists ? 'โ' : 'โ'} ${key}: ${exists ? `${size} chars` : 'ุบูุฑ ููุฌูุฏ'}`);
});

// ูุญุต ุงูุจูุงูุงุช ุงูููุญุฏุฉ
const unifiedData = localStorage.getItem('hsa_final_unified_storage');
if (unifiedData) {
  try {
    const parsed = JSON.parse(unifiedData);
    console.log('\n๐ฆ ุงูุจูุงูุงุช ุงูููุญุฏุฉ:');
    console.log(`- ุงููุณุชุฎุฏู: ${parsed.user ? 'โ' : 'โ'}`);
    console.log(`- ุงูุดุฑูุงุช: ${parsed.companies ? parsed.companies.length : 0}`);
    console.log(`- ุงูููุงูุน: ${parsed.locations ? parsed.locations.length : 0}`);
    console.log(`- ุงูุชููููุงุช ุงููุญููุฉ: ${parsed.evaluations ? parsed.evaluations.length : 0}`);
  } catch (e) {
    console.log('โ ุฎุทุฃ ูู ูุฑุงุกุฉ ุงูุจูุงูุงุช ุงูููุญุฏุฉ');
  }
}

// ูุญุต ุงูุญุฌู ุงูุฅุฌูุงูู
let totalSize = 0;
keys.forEach(key => {
  totalSize += localStorage.getItem(key).length;
});
console.log(`\n๐พ ุงูุญุฌู ุงูุฅุฌูุงูู: ${(totalSize / 1024).toFixed(2)} KB`);
console.log(`๐ ุงูุญุฏ ุงูุฃูุตู: ~5MB (${((totalSize / 1024 / 1024) * 100 / 5).toFixed(1)}% ูุณุชุฎุฏู)`);

console.log('\nโ localStorage ูุนูู ุจุดูู ุทุจูุนู!');